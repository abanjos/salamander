'use strict';

module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.createTable('order_addresses', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      street: {
        type: Sequelize.STRING
      },
      number: {
        type: Sequelize.INTEGER
      },
      cep: {
        type: Sequelize.STRING
      },
      city: {
        type: Sequelize.STRING
      },
      state: {
        type: Sequelize.STRING
      },
      neighborhood: {
        type: Sequelize.STRING
      },
      name: {
        type: Sequelize.STRING
      },
      cpf: {
        type: Sequelize.STRING
      },
      country: {
        type: Sequelize.STRING
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      }
    });
  },
  down: (queryInterface, Sequelize) => {
    return queryInterface.dropTable('order_addresses');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kYXRhYmFzZS9taWdyYXRlLzIwMTkwMjA3MjEzMjAxLWNyZWF0ZS1vcmRlci1hZGRyZXNzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1cCIsInF1ZXJ5SW50ZXJmYWNlIiwiU2VxdWVsaXplIiwiY3JlYXRlVGFibGUiLCJpZCIsImFsbG93TnVsbCIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidHlwZSIsIklOVEVHRVIiLCJzdHJlZXQiLCJTVFJJTkciLCJudW1iZXIiLCJjZXAiLCJjaXR5Iiwic3RhdGUiLCJuZWlnaGJvcmhvb2QiLCJuYW1lIiwiY3BmIiwiY291bnRyeSIsImNyZWF0ZWRBdCIsIkRBVEUiLCJ1cGRhdGVkQXQiLCJkb3duIiwiZHJvcFRhYmxlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLEVBQUUsRUFBRSxDQUFDQyxjQUFELEVBQWlCQyxTQUFqQixLQUErQjtBQUNqQyxXQUFPRCxjQUFjLENBQUNFLFdBQWYsQ0FBMkIsaUJBQTNCLEVBQThDO0FBQ25EQyxNQUFBQSxFQUFFLEVBQUU7QUFDRkMsUUFBQUEsU0FBUyxFQUFFLEtBRFQ7QUFFRkMsUUFBQUEsYUFBYSxFQUFFLElBRmI7QUFHRkMsUUFBQUEsVUFBVSxFQUFFLElBSFY7QUFJRkMsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNPO0FBSmQsT0FEK0M7QUFPbkRDLE1BQUFBLE1BQU0sRUFBRTtBQUNORixRQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ1M7QUFEVixPQVAyQztBQVVuREMsTUFBQUEsTUFBTSxFQUFFO0FBQ05KLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTztBQURWLE9BVjJDO0FBYW5ESSxNQUFBQSxHQUFHLEVBQUU7QUFDSEwsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNTO0FBRGIsT0FiOEM7QUFnQm5ERyxNQUFBQSxJQUFJLEVBQUU7QUFDSk4sUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNTO0FBRFosT0FoQjZDO0FBbUJuREksTUFBQUEsS0FBSyxFQUFFO0FBQ0xQLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDUztBQURYLE9BbkI0QztBQXNCbkRLLE1BQUFBLFlBQVksRUFBRTtBQUNaUixRQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ1M7QUFESixPQXRCcUM7QUF5Qm5ETSxNQUFBQSxJQUFJLEVBQUU7QUFDSlQsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNTO0FBRFosT0F6QjZDO0FBNEJuRE8sTUFBQUEsR0FBRyxFQUFFO0FBQ0hWLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDUztBQURiLE9BNUI4QztBQStCbkRRLE1BQUFBLE9BQU8sRUFBRTtBQUNQWCxRQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ1M7QUFEVCxPQS9CMEM7QUFrQ25EUyxNQUFBQSxTQUFTLEVBQUU7QUFDVGYsUUFBQUEsU0FBUyxFQUFFLEtBREY7QUFFVEcsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNtQjtBQUZQLE9BbEN3QztBQXNDbkRDLE1BQUFBLFNBQVMsRUFBRTtBQUNUakIsUUFBQUEsU0FBUyxFQUFFLEtBREY7QUFFVEcsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNtQjtBQUZQO0FBdEN3QyxLQUE5QyxDQUFQO0FBMkNELEdBN0NjO0FBOENmRSxFQUFBQSxJQUFJLEVBQUUsQ0FBQ3RCLGNBQUQsRUFBaUJDLFNBQWpCLEtBQStCO0FBQ25DLFdBQU9ELGNBQWMsQ0FBQ3VCLFNBQWYsQ0FBeUIsaUJBQXpCLENBQVA7QUFDRDtBQWhEYyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0ge1xuICB1cDogKHF1ZXJ5SW50ZXJmYWNlLCBTZXF1ZWxpemUpID0+IHtcbiAgICByZXR1cm4gcXVlcnlJbnRlcmZhY2UuY3JlYXRlVGFibGUoJ29yZGVyX2FkZHJlc3NlcycsIHtcbiAgICAgIGlkOiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIGF1dG9JbmNyZW1lbnQ6IHRydWUsXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWUsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXG4gICAgICB9LFxuICAgICAgc3RyZWV0OiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICAgIH0sXG4gICAgICBudW1iZXI6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcbiAgICAgIH0sXG4gICAgICBjZXA6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgICAgfSxcbiAgICAgIGNpdHk6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgICAgfSxcbiAgICAgIHN0YXRlOiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICAgIH0sXG4gICAgICBuZWlnaGJvcmhvb2Q6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgICAgfSxcbiAgICAgIG5hbWU6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgICAgfSxcbiAgICAgIGNwZjoge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgICB9LFxuICAgICAgY291bnRyeToge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuU1RSSU5HXG4gICAgICB9LFxuICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gICAgICB9LFxuICAgICAgdXBkYXRlZEF0OiB7XG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIGRvd246IChxdWVyeUludGVyZmFjZSwgU2VxdWVsaXplKSA9PiB7XG4gICAgcmV0dXJuIHF1ZXJ5SW50ZXJmYWNlLmRyb3BUYWJsZSgnb3JkZXJfYWRkcmVzc2VzJyk7XG4gIH1cbn07Il19