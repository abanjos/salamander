'use strict';

module.exports = {
  up: (queryInterface, Sequelize) => {
    return queryInterface.createTable('products', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      display_name: {
        type: Sequelize.STRING
      },
      description: {
        type: Sequelize.STRING
      },
      price: {
        type: Sequelize.INTEGER
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      }
    });
  },
  down: (queryInterface, Sequelize) => {
    return queryInterface.dropTable('products');
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kYXRhYmFzZS9taWdyYXRlLzIwMTkwMjA3MjAyNTA3LWNyZWF0ZS1wcm9kdWN0LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJ1cCIsInF1ZXJ5SW50ZXJmYWNlIiwiU2VxdWVsaXplIiwiY3JlYXRlVGFibGUiLCJpZCIsImFsbG93TnVsbCIsImF1dG9JbmNyZW1lbnQiLCJwcmltYXJ5S2V5IiwidHlwZSIsIklOVEVHRVIiLCJkaXNwbGF5X25hbWUiLCJTVFJJTkciLCJkZXNjcmlwdGlvbiIsInByaWNlIiwiY3JlYXRlZEF0IiwiREFURSIsInVwZGF0ZWRBdCIsImRvd24iLCJkcm9wVGFibGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsRUFBRSxFQUFFLENBQUNDLGNBQUQsRUFBaUJDLFNBQWpCLEtBQStCO0FBQ2pDLFdBQU9ELGNBQWMsQ0FBQ0UsV0FBZixDQUEyQixVQUEzQixFQUF1QztBQUM1Q0MsTUFBQUEsRUFBRSxFQUFFO0FBQ0ZDLFFBQUFBLFNBQVMsRUFBRSxLQURUO0FBRUZDLFFBQUFBLGFBQWEsRUFBRSxJQUZiO0FBR0ZDLFFBQUFBLFVBQVUsRUFBRSxJQUhWO0FBSUZDLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTztBQUpkLE9BRHdDO0FBTzVDQyxNQUFBQSxZQUFZLEVBQUU7QUFDWkYsUUFBQUEsSUFBSSxFQUFFTixTQUFTLENBQUNTO0FBREosT0FQOEI7QUFVNUNDLE1BQUFBLFdBQVcsRUFBRTtBQUNYSixRQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ1M7QUFETCxPQVYrQjtBQWE1Q0UsTUFBQUEsS0FBSyxFQUFFO0FBQ0xMLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDTztBQURYLE9BYnFDO0FBZ0I1Q0ssTUFBQUEsU0FBUyxFQUFFO0FBQ1RULFFBQUFBLFNBQVMsRUFBRSxLQURGO0FBRVRHLFFBQUFBLElBQUksRUFBRU4sU0FBUyxDQUFDYTtBQUZQLE9BaEJpQztBQW9CNUNDLE1BQUFBLFNBQVMsRUFBRTtBQUNUWCxRQUFBQSxTQUFTLEVBQUUsS0FERjtBQUVURyxRQUFBQSxJQUFJLEVBQUVOLFNBQVMsQ0FBQ2E7QUFGUDtBQXBCaUMsS0FBdkMsQ0FBUDtBQXlCRCxHQTNCYztBQTRCZkUsRUFBQUEsSUFBSSxFQUFFLENBQUNoQixjQUFELEVBQWlCQyxTQUFqQixLQUErQjtBQUNuQyxXQUFPRCxjQUFjLENBQUNpQixTQUFmLENBQXlCLFVBQXpCLENBQVA7QUFDRDtBQTlCYyxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0ge1xuICB1cDogKHF1ZXJ5SW50ZXJmYWNlLCBTZXF1ZWxpemUpID0+IHtcbiAgICByZXR1cm4gcXVlcnlJbnRlcmZhY2UuY3JlYXRlVGFibGUoJ3Byb2R1Y3RzJywge1xuICAgICAgaWQ6IHtcbiAgICAgICAgYWxsb3dOdWxsOiBmYWxzZSxcbiAgICAgICAgYXV0b0luY3JlbWVudDogdHJ1ZSxcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZSxcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcbiAgICAgIH0sXG4gICAgICBkaXNwbGF5X25hbWU6IHtcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlNUUklOR1xuICAgICAgfSxcbiAgICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5TVFJJTkdcbiAgICAgIH0sXG4gICAgICBwcmljZToge1xuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxuICAgICAgfSxcbiAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuREFURVxuICAgICAgfSxcbiAgICAgIHVwZGF0ZWRBdDoge1xuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuREFURVxuICAgICAgfVxuICAgIH0pO1xuICB9LFxuICBkb3duOiAocXVlcnlJbnRlcmZhY2UsIFNlcXVlbGl6ZSkgPT4ge1xuICAgIHJldHVybiBxdWVyeUludGVyZmFjZS5kcm9wVGFibGUoJ3Byb2R1Y3RzJyk7XG4gIH1cbn07Il19